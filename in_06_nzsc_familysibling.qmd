---
title: 'NZSC Family and Sibling'
output: html_document
editor_options: 
  chunk_output_type: console
---

# NZSC Family {#sec-in-nzscfam}

```{r}
library(dplyr)
library(tibble)
library(gt)
library(gtExtras)
```

Intro/context statement goes here
None of this necessarily needs to be done in the field but it is a good skill to have for rapid assessment.
Specifics of how to use particular profile-level interpretations to classify to sibling level.

Intro, why the Family is useful, reference to webb and lilburne, things of that nature

## Soil Profile Material

The Soil Profile Material code is the first code defining a family. Choose one code from @tbl-in-pmat. 

Profile material class places restrictions on other parts of the family and sibling definition. These are discussed as they arise below.

## Rock class of stone and bedrock

Rock class in an NZSC Family context uses the lithology codes in @tbl-ss-pm, with specific restrictions around how they are applied to the whole profile:

-   [**Md**]{style="color: red"} soils effectively have no stone or bedrock. Leave the property undefined.
-   Rock class is only defined in reference to stones \> 2 mm and bedrock (where encountered within 100 cm). The rock class of the fine earth fraction is accounted for below.
-   The 'deep and stoneless' classes ([**Mt**]{style="color: red"}, [**Md**]{style="color: red"}, [**So**]{style="color: red"} and [**Sd**]{style="color: red"}) can still have a total of \< 3% by volume stones in the top 100 cm.
-   Include pumice in rock class only where pumice strength is more than 'extremely weak' [@lynn1991, p. 10] - i.e., it can only be broken by hand with difficulty. If the pumice's lithology is uncertain, use the dominant lithology of the probable volcano of origin (e.g. [**Rh**]{style="color: red"} in the Taupō Volcanic Centre and [**An**]{style="color: red"} around Taranaki).
-   Where in-profile stone lithology contrasts with bedrock lithology, two codes separated by '[**/**]{style="color: red"}' can be used e.g. [**Sc/Gw**]{style="color: red"}.
-   Where two lithologies are close to co-dominant in a stony profile, two codes separated by '[**+**]{style="color: red"}' can be used e.g. [**An+Rh**]{style="color: red"}.
-   More complicated combinations are not allowed, e.g. no [**An+Rh/Gw**]{style="color: red"}.

[might need an ok/not ok table here, although what would actually be better is separating profile and bedrock rock class entirely]{style="background-color:lightgreen"}

## Rock class of fines

The same rock class codes in @tbl-ss-pm can be applied to report the dominant lithology of the fine earth (\< 2 mm) fraction of the full profile. Again, some rules apply:

-   [**Sd**]{style="color: red"} soils and [**Mf**]{style="color: red"} soils effectively have no fine earth fraction. Leave the property undefined.
-   Where a lithological discontinuity exists in the profile, two codes separated by '[**/**]{style="color: red"}' can be used e.g. [**Sc/Gw**]{style="color: red"}.
-   Where two lithologies are close to co-dominant, two codes separated by '[**+**]{style="color: red"}' can be used e.g. [**An+Rh**]{style="color: red"}.
-   More complicated combinations are not allowed, e.g. no [**An+Rh/Sm+Ss/Gw**]{style="color: red"}.

## Family texture class

The family texture class describes the dominant character of the top 60 cm, or to the profile material class-defining rock or gravel layer contact if that is shallower. Use the codes in @tbl-in-famtex. Note that 18% organic carbon corresponds to approximately 30% organic matter.

```{r}
#| label: tbl-in-famtex
#| tbl-cap: "Family texture classes"
#| classes : no-stripe

dat_in_famtex <-
  tribble(~Code, ~Name, ~Orgc, ~Silt, ~Clay, 
         'c', 'Clayey', '< 18', NA, '≥ 35', 
         's', 'Sandy', '< 18', '< 40', '< 8',
         'l', 'Loamy', '< 18', '< 40', '≥ 8 - < 35',
         'z', 'Silty' , '< 18', '≥ 40', '≥ 8 - < 35',
         'p', 'Peaty', '≥ 18', NA, NA)

tbl_in_famtex <- gt(dat_in_famtex) |>
  tab_options(
    column_labels.font.weight = 'bold', 
    heading.title.font.weight = 'bold',
    table.align = 'center',
    table.width = '85%'
  ) |>
  tab_style(style = list(cell_text(color = 'red', weight = 'bold')),
            locations = cells_body(columns = 1)) |>
  cols_width(Code ~pct(10), Name ~ pct(20))
  
tbl_in_famtex

```

## Permeability class

This class estimates the permeability of the top 100 cm in units of mm/hr. Use the codes in @tbl-in-famperm and follow the rules in @fig-in-famperm to assign permeability class.

```{r}
#| label: tbl-in-famperm
#| tbl-cap: "Family permeability classes"
#| classes : no-stripe

dat_in_sibdepth <-
  tribble(~Code, ~Name, ~Description, 
         's', 'Slow', '< 4 mm/hr', 
         'm', 'Moderate', '≥ 4 - < 72 mm/hr',
         'r', 'Rapid', '≥ 72 mm/hr')

tbl_in_sibdepth <- gt(dat_in_sibdepth) |>
  tab_options(
    column_labels.font.weight = 'bold', 
    heading.title.font.weight = 'bold',
    table.align = 'center',
    table.width = '85%'
  ) |>
  tab_style(style = list(cell_text(color = 'red', weight = 'bold')),
            locations = cells_body(columns = 1)) |>
  cols_width(Code ~pct(20), Name ~ pct(40))
  
tbl_in_sibdepth

```

Follow the flowchart to assign family permeability class:

```{mermaid}
%%| label: fig-in-famperm
%%| fig-cap: "NZSC Family permeability flowchart"

graph TD
  A[Identify the uppermost horizon with the slowest permeability,<br />or rock above 100 cm. This is Horizon X.]-->B[Does Horizon X have > 30 cm of<br /> contrasting permeability above?]
  B-->|Yes|C(Use m/s, r/s, r/m)
  B--> |No|D["Does the profile have a horizon ≥ 20 cm thick"<br /> below Horizon X with a different permeability class?]
  D-->|Yes|E(Use s/m, s/r or m/r)
  D-->|No|F(Use s, m, or r)
  
```

Some additional rules apply for particular soil profile material classes:

-   For soils with an **S\*** profile material class, assess family permeability class from 20-100 cm or to rock (i.e. ignore the surface 20 cm).
-   Soils with profile material class **Ml** or **Mp** and any soil with an '**M**' root barrier must use **m/s** or **r/s**.
    -   Exception: **Ml** with **F** barrier can't be **\*/s**.

# NZSC Sibling {#sec-in-sib}

These codes help define level 5 of the NZSC.

## Soil Depth {#sec-in-sibdepth}

Soil depth from a sibling perspective is the depth to where digging becomes difficult, e.g.

-   A horizon with ≥ 35% stones by volume (**V** or **X** functional horizons)
-   A soft- or hard-rock surface (**M** rooting barrier)
-   A shattered-lithic contact (**F** rooting barrier)
-   A pan (**Q** functional horizons)
-   Firm strength with massive or coarse structure (**\*Cf** functional horizons)

Use the codes in @tbl-in-sibdepth to assign a depth class to a profile.

```{r}
#| label: tbl-in-sibdepth
#| tbl-cap: "Sibling depth classes"
#| classes : no-stripe

dat_in_sibdepth <-
  tribble(~Code, ~Name, ~Description, 
         'd', 'Deep', '> 100 cm', 
         'md', 'Moderately deep', '≥ 45 - < 100 cm',
         's', 'Shallow', '≥ 20 - < 45 cm',
         'vs', 'Very Shallow' , '< 20 cm')

tbl_in_sibdepth <- gt(dat_in_sibdepth) |>
  tab_options(
    column_labels.font.weight = 'bold', 
    heading.title.font.weight = 'bold',
    table.align = 'center',
    table.width = '85%'
  ) |>
  tab_style(style = list(cell_text(color = 'red', weight = 'bold')),
            locations = cells_body(columns = 1)) |>
  cols_width(Code ~pct(20), Name ~ pct(40))
  
tbl_in_sibdepth

```

## Topsoil stoniness

Topsoil stoniness assesses the amount of rock fragments (as % by volume) in the top 20 cm of the soil profile, including those resting on the soil surface.

A weighted average calculation is required if the top 20 cm contains more than one horizon. As an example, 

```{r}
#| label: tbl-in-sibdcalc
#| classes : no-stripe

dat_in_sibdcalc <-
  tribble(~hthick, ~relthick, ~prop, ~stonepc, ~wavgstone,
          12, 12, 0.6, 15, 9,
          20, 8, 0.4, 25,10,
          NA, NA, NA, NA, 19)

tbl_in_sibdcalc <- gt(dat_in_sibdcalc) |>
  tab_options(
    column_labels.font.weight = 'bold', 
    heading.title.font.weight = 'bold',
    table.align = 'center',
    table.width = '85%'
  ) |>
  cols_label(hthick ~ "Horizon Thickness (cm)",
             relthick ~ "Relevant thickness (cm)",
			       prop ~ "Horizon proportion of top 20 cm",
             stonepc ~ "Horizon stone (%)",
             wavgstone ~ "Weighted average topsoil stone (%)" ) |>
  tab_style(style = list(cell_text(weight = 'bold')), 
                         locations = cells_body(rows = 3, columns = 5)) |>
  sub_missing(missing_text = '')
  
tbl_in_sibdcalc

```

Use the codes in @tbl-in-sibstone to assign stoniness. 

```{r}
#| label: tbl-in-sibstone
#| tbl-cap: "Sibling topsoil stoniness classes"
#| classes : no-stripe

dat_in_sibstone <-
  tribble(~Code, ~Name, ~Description, 
         '1', 'Stoneless', '< 1 %', 
         '2', 'Slightly stony', '≥ 1 - < 5 %',
         '3', 'Moderately stony', '≥ 5 - < 35 %',
         '4', 'Very stony' , '≥ 35 % ')

tbl_in_sibstone <- gt(dat_in_sibstone) |>
  tab_options(
    column_labels.font.weight = 'bold', 
    heading.title.font.weight = 'bold',
    table.align = 'center',
    table.width = '85%'
  ) |>
  tab_style(style = list(cell_text(color = 'red', weight = 'bold')),
            locations = cells_body(columns = 1)) |>
  cols_width(Code ~pct(20), Name ~ pct(40))
  
tbl_in_sibstone
```

## Sibling texture classes

These classes are assessed over the top 100 cm, or to rock or gravel layer contact if those are shallower. Note that this is deeper than the family-level texture control section. The following rules apply:

-   **Mf**, **Mr**, **Ma**, **Ml**, and **Mp** soils must match their family texture code (**c**, **s**, **l**, or **z**).
-   **Sl** and **Sp** soils must use one of **Tp**, **Tc**, **Tl** or **Ts** to align with their family texture code of **p**.
-   **Sd** soils must use **Tp**.
-   Upper and lower textures can be defined for other soil profile classes, but only the dominant two are recorded. Both contributing layers must be at least 20 cm thick.
-   When there are more than two texture layers within the control section, then the texture profile is identified according to the uppermost texture contrast.
    -   For example, if a sandy horizon occurs at 80 cm depth and a clayey horizon overlays a silty horizon at 40 cm, then the texture contrast is reported as clayey over silty (**c/z**) and the sandy layer is ignored.
-   Silty and loamy horizons are not considered contrasting and can be added together where contiguous.
    -   For example, a profile with silty (0--15 cm) over loamy (15--25 cm) over sandy (25-90 cm) is considered to have a contrasting upper layer of 25 cm, and is identified as silty over sandy (**z/s**). The texture specification uses the uppermost of the silty or loamy layers together with the lower layer.
-   Skeletal horizons (**k**) may only be used for **Ms**, **Mm**, **Mt** and **So** soils. The skeletal material must be non-tephric.
-   Skeletal horizons in moderately deep gravelly soils (**Mg**) are ignored in favour of describing the overlying fine sediments.

Use the codes in @tbl-in-sibtexture to assign sibling level texture class(es). 

```{r}
#| label: tbl-in-sibtexture
#| tbl-cap: "Sibling texture classes"
#| classes : no-stripe

dat_in_sibtexture <-
  tribble(~Code, ~Name, ~Org, ~Silt, ~Clay, ~Stone, 
           'k', 'Skeletal',                  NA,     NA,            NA, '≥ 35',
          'Tp', 'Peat or litter',        '≥ 30',     NA,            NA, '< 35',
          'Tc', 'Clayey peat',    '≥ 18 - < 30',     NA,        '≥ 35', '< 35',
          'Tl', 'Loamy peat',     '≥ 18 - < 30',     NA,  '≥ 8 - < 35', '< 35',
          'Ts', 'Sandy peat',     '≥ 18 - < 30', '< 40',         '< 8', '< 35', 
          'c',  'Clayey',                '< 18',     NA,        '≥ 35', '< 35',
          's',  'Sandy',                 '< 18', '< 40',         '< 8', '< 35',
          'l',  'Loamy',                 '< 18', '< 40',  '≥ 8 - < 35', '< 35', 
          'z',  'Silty',                 '< 18', '≥ 40',         '< 3', '< 35') 

tbl_in_sibtexture <- gt(dat_in_sibtexture) |>
  tab_options(
    column_labels.font.weight = 'bold', 
    heading.title.font.weight = 'bold',
    table.align = 'center',
    table.width = '85%'
  ) |>
  tab_style(style = list(cell_text(color = 'red', weight = 'bold')),
            locations = cells_body(columns = 1)) |>
  cols_label(Org ~ 'Organic Carbon %',
             Silt ~ 'Silt %',
             Clay ~ 'Clay %', 
             Stone ~ 'Stone %')|>
  sub_missing(missing_text = '') |>
  cols_width(Code ~pct(10), Name ~ pct(30))
  
tbl_in_sibtexture
```


## Drainage {#sec-in-pdrng}

Profile drainage is built from horizon drainage ratings completed according to @sec-in-hdrng. 

- The dominant drainage class in each of the control sections in @tbl-in-pdrng forms a sequence, e.g. 'WE-WE-MW-MW-IP'. Each of these sequences is unique to a profile drainage class - in the case of this example, 'MW'. 
- Any sequence where the drainage class does not change (e.g. PO-PO-PO-PO-PO) will also be PO at profile level.
- For shallower profiles, the drainage sequence stops early. For example, with a 25 cm profile over rock, one might get the sequence WE-MW-XX-XX-XX. That sequence can occur in the MW, IP and PO profile ratings, but since the IP and PO classes are not identified at horizon level, MW must be chosen at profile level.
- For perched profiles, sequences like IP-PO-PO-WE-WE might be identified, where the perching layer prevents development of poor-drainage diagnostic features below. In this case, when classifying drainage, one must stop at the base of the perched layer, as if it were a shallow profile, ignoring the ‘improvement’ in drainage below this point.

```{r}
#| label: tbl-in-pdrng
#| tbl-cap: "Profile drainage rules"
#| column: page



dat_in_pdrng <-
  tribble(   
    ~depth,      ~VP,              ~PO,          ~IP,              ~MW,          ~WE,
  '0 - 15', 'PO, VP', 'WE, MW, IP, PO', 'WE, MW, IP',         'WE, MW',         'WE',
 '15 - 30',     'VP',     'MW, IP, PO', 'WE, MW, IP',         'WE, MW',         'WE',
 '30 - 60',     'VP',         'PO, VP',         'IP',         'WE, MW',         'WE',
 '60 - 90',     'VP',         'PO, VP', 'IP, PO, VP',     'MW, IP, PO',         'WE',
    '> 90',     'VP',         'PO, VP', 'IP, PO, VP', 'MW, IP, PO, VP', 'WE, MW, IP')

tbl_in_pdrng <- gt(dat_in_pdrng) |>
  tab_options(
    column_labels.font.weight = 'bold', 
    heading.title.font.weight = 'bold',
    table.align = 'center',
    table.width = '85%'
  ) |>
  tab_style(style = list(cell_text(weight = 'bold')),
            locations = cells_body(columns = 1)) |>
  cols_label (VP ~ 'Very Poor',
              PO ~ 'Poor',
              IP ~ 'Imperfect', 
              MW ~ 'Moderately Well',
              WE ~ 'Well',
              depth ~ 'Depth (cm)')
tbl_in_pdrng

```

Workers classifying drainage for NZSC Sibling construction have no need to subdivide within those overall ratings. For other types of work e.g. agricultural suitability assessment, it may be useful to recognise subgroups – e.g. for a deep-rooted, wetness-intolerant crop, there’s a difference between an imperfectly drained profile that’s WE-IP-IP-IP-PO vs WE-IP-IP-PO-PO.

### Helper information for profile drainage

@tbl-in-drngl describes some potential additional signifiers of profile drainage condition that might be considered. These may be useful when estimating drainage in a new landscape that has not yet been examined in detail, or when handling edge cases where a particular control section has ambiguous horizon-level drainage.

```{r}
#| label: tbl-in-drngl
#| tbl-cap: "Profile drainage signifiers"
#| classes : no-stripe
#| column: page

dat_in_drngl <-
  tribble(~Code, ~Name, ~relel, ~Landform, ~Slope, ~Veg, ~Other, 
         'VP', 'Very poor', 'Very low (0-1m)', 'Waning/minimal/enclosed flats and depressions', 'Level to very gentle', 'Exclusively wetland plants', 'Persistent surface water ponding or seeps nearby',
         'PO', 'Poor', 'Low (0-10m)', 'Waning/minimal slopes and flats', 'Low-slope or level ground', 'Wetland plants', 'Seasonal ponding or seeps nearby',
         'IP', 'Imperfect', 'Variable', 'Slopes, hollows, flats', 'Gentle to moderately steep', 'Any', 'More common below high dropoffs',
         'MW', 'Moderately Well', 'Variable', 'Most landforms', 'Gentle to moderately steep', 'Any' ,'',
         'WE', 'Well', 'Moderate to high (>10 m)', 'crests, ridges and spurs', 'Gentle to very steep' , 'Any, dry-tolerant may outcompete', '')

tbl_in_drngl <- gt(dat_in_drngl) |>
  tab_options(
    column_labels.font.weight = 'bold', 
    heading.title.font.weight = 'bold',
    table.align = 'center',
    table.width = '85%'
  ) |>
  tab_style(style = list(cell_text(color = 'red', weight = 'bold')),
            locations = cells_body(columns = 1)) |>
  cols_label(relel ~ 'Elevation above local drainage',
             Veg ~ 'Vegetation') |>
  cols_width(Code ~pct(10), Name ~ pct(20))
  
tbl_in_drngl

```

### Natural vs Artificial drainage

Profile drainage is often modified by human activity. Many of these modifications require ongoing maintenance. Use the codes in @tbl-in-natdrng to signify the degree of drainage modification.

```{r}
#| label: tbl-in-natdrng
#| tbl-cap: "Profile drainage modification level"
#| classes : no-stripe

dat_in_natdrng <-
  tribble(~Code, ~Name, ~Description, 
         'N', 'Natural', 'No evidence of human impacts on the local drainage regime', 
         'M', 'Minor', 'Drainage regime passively altered by e.g. conversion to or from forest; or ambiguous evidence of any human impacts beyond clearing',
         'A', 'Major', 'Clear evidence of directed human alteration to the drainage regime e.g. drain or dam construction adjacent to site, flow diversions, infill, levelling or contouring works')

tbl_in_natdrng <- gt(dat_in_natdrng) |>
  tab_options(
    column_labels.font.weight = 'bold', 
    heading.title.font.weight = 'bold',
    table.align = 'center',
    table.width = '85%'
  ) |>
  tab_style(style = list(cell_text(color = 'red', weight = 'bold')),
            locations = cells_body(columns = 1)) |>
  cols_width(Code ~pct(20), Name ~ pct(20))
  
tbl_in_natdrng

```

